nval='What is the value of n(Vertical): ';
n=input(nval);
mval='What is the value of m(Horizontal): ';
m=input(mval);

test=rand(n,m);%m次元の横ベクトルからなるn個の行列
test1=repmat(test,n,1);%n*m行列を縦にn個複製した(n*n)*m行列
test2=reshape((ones(n,1)*reshape(test,1,m*n)),n*n,m);% 各横ベクトルがn個縦に連続した(n*n)*m行列

dis=zeros(n,m);%for文用結果配列の初期化
%for文によって記述した場合
tic
 for i=1:n*n
     for j=1:m
         dis(i,j)=(test1(i,j)-test2(i,j))^2;
     end
 end
 D1=sqrt(sum(dis'));
 resultD1=reshape(D1,n,n);
 disp(resultD1);
toc

%ベクトル化によって記述した場合
tic
distance=(test1-test2).^2;
D2=sqrt( sum(distance') );
resultD2=reshape(D2,n,n);
disp(resultD2);
toc

%What is the value of n(Vertical): 11
%What is the value of m(Horizontal): 15

%for文による実行例

%         0    1.3300    1.3198    1.3562    1.4890    1.6209    1.3382    1.4242    1.1239    1.5861    1.4133
%    1.3300         0    1.2136    1.3894    1.5001    1.8121    1.5849    1.4716    1.7067    1.3698    1.3208
%    1.3198    1.2136         0    1.6081    1.5279    1.6079    1.1675    1.5192    1.1716    1.7009    1.5163
%    1.3562    1.3894    1.6081         0    1.3731    1.3930    1.3572    1.2143    1.3469    1.3207    1.5354
%    1.4890    1.5001    1.5279    1.3731         0    1.5917    1.5729    1.6026    1.5519    1.3720    1.4422
%    1.6209    1.8121    1.6079    1.3930    1.5917         0    1.5309    1.2403    1.4576    1.2805    1.7737
%    1.3382    1.5849    1.1675    1.3572    1.5729    1.5309         0    1.1991    0.5802    1.5279    1.6280
%    1.4242    1.4716    1.5192    1.2143    1.6026    1.2403    1.1991         0    1.2088    1.1336    1.5590
%    1.1239    1.7067    1.1716    1.3469    1.5519    1.4576    0.5802    1.2088         0    1.6380    1.6258
%    1.5861    1.3698    1.7009    1.3207    1.3720    1.2805    1.5279    1.1336    1.6380         0    1.4567
%    1.4133    1.3208    1.5163    1.5354    1.4422    1.7737    1.6280    1.5590    1.6258    1.4567         0

% 経過時間は 0.002271 秒です。

%ベクトル化による実行例

%         0    1.3300    1.3198    1.3562    1.4890    1.6209    1.3382    1.4242    1.1239    1.5861    1.4133
%    1.3300         0    1.2136    1.3894    1.5001    1.8121    1.5849    1.4716    1.7067    1.3698    1.3208
%    1.3198    1.2136         0    1.6081    1.5279    1.6079    1.1675    1.5192    1.1716    1.7009    1.5163
%    1.3562    1.3894    1.6081         0    1.3731    1.3930    1.3572    1.2143    1.3469    1.3207    1.5354
%    1.4890    1.5001    1.5279    1.3731         0    1.5917    1.5729    1.6026    1.5519    1.3720    1.4422
%    1.6209    1.8121    1.6079    1.3930    1.5917         0    1.5309    1.2403    1.4576    1.2805    1.7737
%    1.3382    1.5849    1.1675    1.3572    1.5729    1.5309         0    1.1991    0.5802    1.5279    1.6280
%    1.4242    1.4716    1.5192    1.2143    1.6026    1.2403    1.1991         0    1.2088    1.1336    1.5590
%    1.1239    1.7067    1.1716    1.3469    1.5519    1.4576    0.5802    1.2088         0    1.6380    1.6258
%    1.5861    1.3698    1.7009    1.3207    1.3720    1.2805    1.5279    1.1336    1.6380         0    1.4567
%    1.4133    1.3208    1.5163    1.5354    1.4422    1.7737    1.6280    1.5590    1.6258    1.4567         0

% 経過時間は 0.000631 秒です。


%この実行結果から確かにベクトル化で行うとforループによる処理よりも早く処理することができる.
%ことがわかる.      
